name: Build, Push, and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_BACKEND_RDS }}
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_BACKEND_REDIS }}

      - name: Build and Push backend_rds Docker image
        run: |
          docker build -t backend_rds ./backend_rds
          docker tag backend_rds:latest ${{ secrets.ECR_REPOSITORY_BACKEND_RDS }}:latest
          docker push ${{ secrets.ECR_REPOSITORY_BACKEND_RDS }}:latest

      - name: Build and Push backend_redis Docker image
        run: |
          docker build -t backend_redis ./backend_redis
          docker tag backend_redis:latest ${{ secrets.ECR_REPOSITORY_BACKEND_REDIS }}:latest
          docker push ${{ secrets.ECR_REPOSITORY_BACKEND_REDIS }}:latest

      - name: Debugging
        run: |
          echo "EC2_HOST is: $EC2_HOST"
          echo "SSH_KEY length is: ${#SSH_KEY}"

      - name: SSH into EC2 and Deploy Containers
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          ECR_REPOSITORY_BACKEND_RDS: ${{ secrets.ECR_REPOSITORY_BACKEND_RDS }}
          ECR_REPOSITORY_BACKEND_REDIS: ${{ secrets.ECR_REPOSITORY_BACKEND_REDIS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
        run: |
          echo "$SSH_KEY" > key.pem
          chmod 600 key.pem
          ssh -t -o StrictHostKeyChecking=no -i key.pem ec2-user@$EC2_HOST << 'EOF'
            # Pull the latest images from ECR
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_BACKEND_RDS
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_BACKEND_REDIS

            docker pull $ECR_REPOSITORY_BACKEND_RDS:latest
            docker pull $ECR_REPOSITORY_BACKEND_REDIS:latest

            # Stop existing containers if they are running
            docker stop backend_rds || true && docker rm backend_rds || true
            docker stop backend_redis || true && docker rm backend_redis || true

            # Run new containers
            docker run -d --name backend_rds -p 8000:8000 \
              -e DB_HOST=$DB_HOST \
              -e DB_PORT=$DB_PORT \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_NAME=$DB_NAME \
              $ECR_REPOSITORY_BACKEND_RDS:latest

            docker run -d --name backend_redis -p 8001:8001 \
              -e REDIS_HOST=$REDIS_HOST \
              -e REDIS_PORT=$REDIS_PORT \
              $ECR_REPOSITORY_BACKEND_REDIS:latest
          EOF
